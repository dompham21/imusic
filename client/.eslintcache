[{"/Users/dom/Documents/music-mern/client/src/index.js":"1","/Users/dom/Documents/music-mern/client/src/serviceWorker.js":"2","/Users/dom/Documents/music-mern/client/src/containers/App/App.js":"3","/Users/dom/Documents/music-mern/client/src/components/Gallery/Gallery.js":"4","/Users/dom/Documents/music-mern/client/src/containers/Player/Player.js":"5","/Users/dom/Documents/music-mern/client/src/containers/Home/Home.js":"6","/Users/dom/Documents/music-mern/client/src/containers/SideBar/SideBar.js":"7","/Users/dom/Documents/music-mern/client/src/containers/NavBar/NavBar.js":"8","/Users/dom/Documents/music-mern/client/src/commons/Routers/PublicRouter.js":"9","/Users/dom/Documents/music-mern/client/src/components/Playlist/Playlist.js":"10","/Users/dom/Documents/music-mern/client/src/components/PlaylistChart/PlaylistChart.js":"11","/Users/dom/Documents/music-mern/client/src/components/ChartListItem/ChartListItem.js":"12","/Users/dom/Documents/music-mern/client/src/components/Chart/Chart.js":"13","/Users/dom/Documents/music-mern/client/src/commons/util.js":"14","/Users/dom/Documents/music-mern/client/src/constants/playlist_constants.js":"15","/Users/dom/Documents/music-mern/client/src/actions/playlist_action.js":"16","/Users/dom/Documents/music-mern/client/src/reducers/index.js":"17","/Users/dom/Documents/music-mern/client/src/reducers/playlist_reducers.js":"18","/Users/dom/Documents/music-mern/client/src/helpers/toastHelper.js":"19","/Users/dom/Documents/music-mern/client/src/redux/configureStore.js":"20","/Users/dom/Documents/music-mern/client/src/sagas/index.js":"21","/Users/dom/Documents/music-mern/client/src/constants/index.js":"22","/Users/dom/Documents/music-mern/client/src/apis/playlist_api.js":"23","/Users/dom/Documents/music-mern/client/src/constants/endpoint_constant.js":"24","/Users/dom/Documents/music-mern/client/src/commons/axiosService.js":"25","/Users/dom/Documents/music-mern/client/src/components/SidebarLoading/SidebarLoading.js":"26","/Users/dom/Documents/music-mern/client/src/components/ContainerLoading/ContainerLoading.js":"27","/Users/dom/Documents/music-mern/client/src/components/PlaylistLoading/PlaylistLoading.js":"28","/Users/dom/Documents/music-mern/client/src/reducers/ui_reducer.js":"29","/Users/dom/Documents/music-mern/client/src/constants/ui_constant.js":"30","/Users/dom/Documents/music-mern/client/src/actions/ui_action.js":"31","/Users/dom/Documents/music-mern/client/src/reducers/song_reducer.js":"32","/Users/dom/Documents/music-mern/client/src/constants/song_constant.js":"33","/Users/dom/Documents/music-mern/client/src/actions/song_action.js":"34","/Users/dom/Documents/music-mern/client/src/reducers/queue_reducer.js":"35","/Users/dom/Documents/music-mern/client/src/apis/song_api.js":"36","/Users/dom/Documents/music-mern/client/src/containers/DrawerQueue/DrawerQueue.js":"37","/Users/dom/Documents/music-mern/client/src/components/ListSongQueue.js":"38","/Users/dom/Documents/music-mern/client/src/constants/queue_constant.js":"39","/Users/dom/Documents/music-mern/client/src/actions/queue_action.js":"40","/Users/dom/Documents/music-mern/client/src/components/PlaylistItem/PlaylistItem.js":"41"},{"size":734,"mtime":1609496141339,"results":"42","hashOfConfig":"43"},{"size":5086,"mtime":1601483418877,"results":"44","hashOfConfig":"43"},{"size":2241,"mtime":1610360360496,"results":"45","hashOfConfig":"43"},{"size":2196,"mtime":1612417410723,"results":"46","hashOfConfig":"43"},{"size":13729,"mtime":1612417634386,"results":"47","hashOfConfig":"43"},{"size":2531,"mtime":1609815969068,"results":"48","hashOfConfig":"43"},{"size":4706,"mtime":1612417691813,"results":"49","hashOfConfig":"43"},{"size":2524,"mtime":1612417505354,"results":"50","hashOfConfig":"43"},{"size":396,"mtime":1609471622070,"results":"51","hashOfConfig":"43"},{"size":3042,"mtime":1612417018508,"results":"52","hashOfConfig":"43"},{"size":940,"mtime":1609471476708,"results":"53","hashOfConfig":"43"},{"size":1478,"mtime":1612417331398,"results":"54","hashOfConfig":"43"},{"size":6395,"mtime":1609473738657,"results":"55","hashOfConfig":"43"},{"size":1350,"mtime":1610355215256,"results":"56","hashOfConfig":"43"},{"size":343,"mtime":1609486753260,"results":"57","hashOfConfig":"43"},{"size":940,"mtime":1609486760359,"results":"58","hashOfConfig":"43"},{"size":383,"mtime":1609755674331,"results":"59","hashOfConfig":"43"},{"size":1547,"mtime":1609579850690,"results":"60","hashOfConfig":"43"},{"size":352,"mtime":1609506281757,"results":"61","hashOfConfig":"43"},{"size":816,"mtime":1609487070613,"results":"62","hashOfConfig":"43"},{"size":3969,"mtime":1610438035685,"results":"63","hashOfConfig":"43"},{"size":87,"mtime":1609495842095,"results":"64","hashOfConfig":"43"},{"size":466,"mtime":1613459995685,"results":"65","hashOfConfig":"43"},{"size":357,"mtime":1613460005220,"results":"66","hashOfConfig":"43"},{"size":701,"mtime":1609762777642,"results":"67","hashOfConfig":"43"},{"size":508,"mtime":1609571132216,"results":"68","hashOfConfig":"43"},{"size":422,"mtime":1609572635534,"results":"69","hashOfConfig":"43"},{"size":1639,"mtime":1609573575477,"results":"70","hashOfConfig":"43"},{"size":699,"mtime":1609864204817,"results":"71","hashOfConfig":"43"},{"size":212,"mtime":1609864208142,"results":"72","hashOfConfig":"43"},{"size":356,"mtime":1609864222107,"results":"73","hashOfConfig":"43"},{"size":2672,"mtime":1610440362416,"results":"74","hashOfConfig":"43"},{"size":673,"mtime":1610085685805,"results":"75","hashOfConfig":"43"},{"size":1641,"mtime":1610110929920,"results":"76","hashOfConfig":"43"},{"size":1515,"mtime":1610285667799,"results":"77","hashOfConfig":"43"},{"size":835,"mtime":1613407590479,"results":"78","hashOfConfig":"43"},{"size":4762,"mtime":1613459848065,"results":"79","hashOfConfig":"43"},{"size":1449,"mtime":1612170282220,"results":"80","hashOfConfig":"43"},{"size":269,"mtime":1610162562835,"results":"81","hashOfConfig":"43"},{"size":549,"mtime":1610285693712,"results":"82","hashOfConfig":"43"},{"size":3232,"mtime":1612417551677,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"jinkl9",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"86"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"86"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"86"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"86"},"/Users/dom/Documents/music-mern/client/src/index.js",[],["176","177"],"/Users/dom/Documents/music-mern/client/src/serviceWorker.js",[],"/Users/dom/Documents/music-mern/client/src/containers/App/App.js",["178"],"import React, { Suspense, useEffect } from 'react';\nimport { Row, Col } from 'antd';\nimport {Switch} from \"react-router-dom\";\nimport PublicRouter from '../../commons/Routers/PublicRouter';\n\nimport { ToastContainer } from 'react-toastify';\nimport NavBar from '../NavBar/NavBar';\nimport SideBar from '../SideBar/SideBar';\nimport Home from '../Home/Home';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\n\nconst Player = React.lazy(()=> import('../Player/Player'))\nconst DrawerQueue = React.lazy(()=> import('../DrawerQueue/DrawerQueue'))\n\nfunction App() {\n  useEffect(() => {\n      !localStorage.getItem('imusic_queue') && localStorage.setItem('imusic_queue',JSON.stringify({\n          currentEncodeId: \"\",\n          encodeIds: [],\n          itemsMap: [],\n          recommend: [],\n          preSong: []\n        }));\n\n      !localStorage.getItem('imusic_player') && localStorage.setItem('imusic_player',JSON.stringify({\n        beforeMuteVolume: 1\n      }));\n\n      !localStorage.getItem('imusic_currSongInfo') && localStorage.setItem('imusic_currSongInfo',JSON.stringify({}))\n\n      !localStorage.getItem('imusic_history') && localStorage.setItem('imusic_history',JSON.stringify({\n        preSong: []\n      }));\n\n      !localStorage.getItem('imusic_hasPlayer') && localStorage.setItem('imusic_hasPlayer',false)\n\n      !localStorage.getItem('imusic_defaultVolume') && localStorage.setItem('imusic_defaultVolume','1')\n  }, [])\n  return (\n    <Suspense fallback={(<div></div>)}>\n      <Row>\n        <Col className=\"sidebar-layout\">\n          <PublicRouter exact path=\"*\" component={SideBar}/>\n        </Col>\n        <Col className=\"main-layout\">\n          <div className=\"background\"></div>\n          <PublicRouter exact path=\"*\" component={NavBar}/>\n          <ToastContainer\n            position=\"top-right\"\n            autoClose={5000}\n            hideProgressBar={false}\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n          />\n          <DrawerQueue/>\n\n          <PublicRouter exact path=\"/\" component={Home}/>\n        </Col>\n        <Player/>\n      </Row>         \n    </Suspense>\n  );\n}\n\nexport default App;","/Users/dom/Documents/music-mern/client/src/components/Gallery/Gallery.js",["179","180","181","182"],"import React, { useState,useEffect } from 'react';\nimport './Gallery.css';\nimport { Swiper,SwiperSlide } from 'swiper/react';\nimport SwiperCore, {EffectCoverflow,Autoplay,Navigation} from 'swiper';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LazyLoadComponent } from 'react-lazy-load-image-component';\n\n\n\nfunction Gallery(props) {\n   \n    const { gallery } = props\n\n    SwiperCore.use([Navigation,EffectCoverflow,Autoplay]);\n    return (\n        <div>\n            {\n                gallery && gallery.length && \n                <Swiper\n                    navigation\n                    className=\"swiper-container swiper-gallery\"\n                    effect= \"coverflow\"\n                    grabCursor= {true}\n                    centeredSlides= {true}\n                    slidesPerView= \"auto\"\n                    coverflowEffect= {{ \n                        rotate: 0,\n                        stretch: 20,\n                        depth: 200,\n                        modifier: 1,\n                        slideShadows: true,\n                    }}\n                    loop={true}\n                    autoplay={{\n                        delay:5000,\n                        disableOnInteraction:false\n                    }}\n                >\n                    {\n                        gallery.map(track=>{\n                            return (\n                                <SwiperSlide className=\"swiper-slide swiper-slide-gallery\" style={{backgroundImage:`url(${track.banner})`}} key={track.encodeId}>\n                                    <LazyLoadComponent>\n                                        <div className=\"card-content\">\n                                            <div className=\"title\">{track.title}</div>\n                                            <h3 className=\"subtitle\">{track.description}</h3>\n                                        </div>\n                                    </LazyLoadComponent>  \n                                </SwiperSlide>\n                            )\n                        })\n                    }   \n                </Swiper>\n        }\n       \n        </div>\n        \n        \n        \n        \n    )\n}\n\nexport default Gallery\n","/Users/dom/Documents/music-mern/client/src/containers/Player/Player.js",["183","184","185"],"import React,{ useRef,useState, useEffect } from 'react';\nimport './Player.css';\nimport { BsMusicNoteBeamed,BsMusicNote } from 'react-icons/bs';\nimport { FiVolume1,FiVolume2,FiVolumeX } from 'react-icons/fi'\nimport { BsFillSkipEndFill,BsFillSkipStartFill,BsFillPlayFill,BsMusicNoteList,BsPauseFill } from 'react-icons/bs';\nimport {  formatTimeAudio, arrayRemove } from '../../commons/util';\nimport { useSelector,useDispatch } from 'react-redux';\nimport {  showDrawerQueue } from '../../actions/ui_action';\nimport TimeSlider from \"react-input-slider\";\nimport { fetchSongSuggested, pauseSongAction, togglePausePlaySongAction, fetchSong } from '../../actions/song_action';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n\nfunction Player() {\n    let defaultVolume  = localStorage.getItem('imusic_defaultVolume');\n    const urlSongStorage = JSON.parse(localStorage.getItem('imusic_urlSong'))\n    const hasPlayer = localStorage.getItem('imusic_hasPlayer');\n    let suggestedSongs = useSelector(state => state.song.suggestedSongs);\n\n    const currSongInfo = JSON.parse(localStorage.getItem('imusic_currSongInfo'));\n    const queues = JSON.parse(localStorage.getItem('imusic_queue')).itemsMap\n    let queue = JSON.parse(localStorage.getItem('imusic_queue'))\n    let { recommend } = queue \n    const isPlaying = useSelector(state => state.song.isPlaying)\n    const [currentTime,setCurrentTime] = useState(0);\n    const [volume,setVolume] = useState(defaultVolume);\n    const urlSongRedux = useSelector(state => state.song.urlSong)\n    const idCurrSong = useSelector(state => state.song.idSong)\n    const toggeShowDrawerQueue = useSelector(state => state.ui.toggeShowDrawerQueue)\n    const [duration,setDuration] = useState(0);\n    const dispatch = useDispatch()\n\n    const audioRef = useRef(null)\n    let urlSong = urlSongStorage || urlSongRedux\n    useEffect(() => {\n        if (isPlaying) {\n            audioRef.current.play();\n         } else {\n            audioRef.current.pause();\n        }\n    }, [isPlaying])\n\n    const handleLoadedData = () => {\n        audioRef.current.volume = volume;\n        setDuration(audioRef.current.duration);\n        if (isPlaying) {\n            document.title = `${currSongInfo.title} - ${currSongInfo.artistsNames}`\n            audioRef.current.play();\n        }\n    };\n\n    const handleTimeSliderChange = ({ x }) => {\n        if(isPlaying){\n            audioRef.current.currentTime = x;\n            setCurrentTime(x);\n        }\n    };\n\n    const handleTimeSliderVolume = ({x}) => {\n        audioRef.current.volume = x;\n        setVolume(x);\n        localStorage.setItem('imusic_defaultVolume',x)\n    }\n\n    const handlePausePlayClick = () => {\n        if (isPlaying) {\n          audioRef.current.pause();\n        } else {\n          audioRef.current.play();\n        }\n        dispatch(togglePausePlaySongAction());\n      };\n\n    const handleShowDrawerQueue = () => {\n        if(!toggeShowDrawerQueue){\n            dispatch(fetchSongSuggested(idCurrSong || currSongInfo.encodeId));\n        }\n        dispatch(showDrawerQueue());\n    }\n    const handleOffVolume = () => {\n        localStorage.setItem('imusic-volume',JSON.stringify({\n            beforeMuteVolume: audioRef.current.volume\n        }));\n        audioRef.current.volume = 0;\n        setVolume(0);\n    }\n    const handleOnVolume = () => {\n        let beforeVolume = JSON.parse(localStorage.getItem('imusic-volume')).beforeMuteVolume\n        audioRef.current.volume  = beforeVolume;\n        setVolume(beforeVolume)\n    }\n    const handleQualitySource = () => {\n        if(urlSong){\n            if( (urlSong['320'] !== 'VIP') || !urlSong['320']){\n                return urlSong['320'];\n            }\n            else {\n                return urlSong['128'];\n            }\n        }\n    }\n\n    const playPrevOrNextSong = (prevOrnext) => {\n        const prevOrNextSong = findSong(prevOrnext);\n\n        if (!prevOrNextSong) return;\n        dispatch(fetchSong(prevOrNextSong));\n        document.title = `${prevOrNextSong.title} - ${prevOrNextSong.artistsNames}`\n\n        \n    }\n\n    const findSong = (prevOrnext) => {\n        console.log(suggestedSongs);\n        let index = queues.map(i => i.encodeId).indexOf(currSongInfo.encodeId)\n        if(!recommend || !recommend.length) {\n            dispatch(fetchSongSuggested(currSongInfo.encodeId));\n        }\n        switch (prevOrnext) {\n            case \"next\":\n                if(queues.length - 1 === index && queues.length ) { //last element of playlist \n                    let removeSong = queue.itemsMap.splice(queue.itemsMap[index],1);\n\n                    dispatch(fetchSongSuggested(currSongInfo.encodeId));\n                    \n                    localStorage.setItem('imusic_queue',JSON.stringify({...queue,preSong: [...queue.preSong,removeSong[0]],recommend: suggestedSongs,itemsMap: queue.itemsMap}))\n                    if(!recommend[0]) return null\n                    return recommend[0]\n                }\n                else if( index === -1){ //when playlist length == 0 then play suggested song  \n                   \n                    dispatch(fetchSongSuggested(currSongInfo.encodeId));\n                    if(!recommend[0]) return null\n                    localStorage.setItem('imusic_queue',JSON.stringify({...queue,preSong: [...queue.preSong,recommend[0]],recommend: suggestedSongs}))\n                    return recommend[0]\n                }\n                queue.itemsMap.splice(queue.itemsMap[index],1); // remove curr song from playlist and push to preSong\n\n                localStorage.setItem('imusic_queue',JSON.stringify({...queue,preSong: [...queue.preSong,queues[index]],itemsMap: queue.itemsMap}))\n                return queues[index + 1] ;\n            case \"prev\":\n            \n                let pre =  queue.preSong.splice(queue.preSong.length - 1,1);\n                localStorage.setItem('imusic_queue',JSON.stringify({...queue,preSong: queue.preSong}))\n                if(!pre.length) return null\n                return pre[0];\n\n            default:\n                return null;\n        }\n    }\n    const handleEnded = () => {\n        playPrevOrNextSong('next');\n    }\n    return (\n        <div className=\"player-controls\" style={{display: (hasPlayer === \"true\") || isPlaying ? \"unset\":\"none\"}}>\n            <div className=\"player-container\">\n            <audio\n                // onEnded={handleEnded}\n                ref={audioRef}\n                src={handleQualitySource()}\n                onLoadedData={handleLoadedData}\n                onTimeUpdate={() => setCurrentTime(audioRef.current.currentTime)}\n                onEnded={handleEnded}\n            />\n                <div className=\"player-controls-left\">\n                    <div className=\"media-animate\">\n                        <div className=\"media-left\">\n                            <div className=\"thumbnail-wrapper\">\n                                <div className=\"thumbnail\">\n                                    <LazyLoadImage\n                                        className=\"img-rounded\" \n                                        effect=\"blur\"\n                                        alt={currSongInfo && currSongInfo.alias}\n                                        height={'100%'}\n                                        src={currSongInfo && currSongInfo.thumbnail} \n                                        width={'100%'} \n                                        style={{animationPlayState: isPlaying ? \"running\" : \"paused\" }}\n                                    />\n                                </div>\n                                <div className=\"note note1\" style={{animationPlayState: isPlaying ? \"running\" : \"paused\" }}><BsMusicNoteBeamed/></div>\n                                <div className=\"note note2\" style={{animationPlayState: isPlaying ? \"running\" : \"paused\" }}><BsMusicNote/></div>\n                                <div className=\"note note3\" style={{animationPlayState: isPlaying ? \"running\" : \"paused\" }}><BsMusicNoteBeamed/></div>\n                                <div className=\"note note4\" style={{animationPlayState: isPlaying ? \"running\" : \"paused\" }}><BsMusicNote/></div>\n                            </div>\n                        </div>\n                        <div className=\"media-content\">\n                            <div className=\"title\">{currSongInfo && currSongInfo.title}</div>\n                            <h3 className=\"subtitle\">{currSongInfo && currSongInfo.artistsNames}</h3>\n                        </div>\n                        <div className=\"media-right\"></div>\n                    </div>\n                </div>\n                <div className=\"player-controls-bar \">\n                    <div className=\"player-action\">\n                        <button className=\"action-btn-play btn-skip-pre\"\n                            onClick={()=>playPrevOrNextSong(\"prev\")}\n                        >\n                            <BsFillSkipStartFill/>\n                        </button>\n                        <button className=\"action-btn-play btn-player\" \n                            style={{display:isPlaying ? \"none\" : \"flex\"}}\n                            onClick={()=>handlePausePlayClick()}\n                        >\n                            <BsFillPlayFill/>\n                        </button>\n                        <button className=\"action-btn-play btn-player\" \n                            style={{display:isPlaying ? \"flex\" : \"none\"}}\n                            onClick={()=>handlePausePlayClick()}\n                        >\n                            <BsPauseFill/>\n                        </button>\n                        <button className=\"action-btn-play btn-skip-next\"\n                            onClick={()=>playPrevOrNextSong(\"next\")}\n                        >\n                            <BsFillSkipEndFill/>\n                        </button>\n                    </div>\n                    <div className=\"progress-bar\">\n                        <div className=\"time left\">{formatTimeAudio(currentTime)}</div>\n                        <div className=\"time-slider-bar\">\n                            <TimeSlider\n                                axis=\"x\"\n                                xmax={duration}\n                                x={currentTime}\n                                onChange={handleTimeSliderChange}\n                                styles={{\n                                    track: {\n                                        backgroundColor: \"#ffffff\",\n                                        height: \"3px\",\n                                    },\n                                    active: {\n                                        backgroundColor: \"#333\",\n                                        height: \"2px\",\n                                    },\n                                    thumb: {\n                                        marginTop: \"-3px\",\n                                        width: \"8px\",\n                                        height: \"8px\",\n                                        backgroundColor: \"#333\",\n                                        borderRadius: 0,\n                                    },\n                                }}\n                            />\n                        </div>\n                        <div className=\"time right\">{formatTimeAudio(duration)}</div>\n                    </div>\n                </div>\n                <div className=\"player-controls-right\">\n                    <div className=\"volume\">\n                        <button className=\"action-btn-play btn-volume\" style={{display:volume<0.5&&volume>0 ? \"flex\" : \"none\"}} onClick={handleOffVolume}><FiVolume1/></button>\n                        <button className=\"action-btn-play btn-volume\" style={{display:volume>=0.5 ? \"flex\" : \"none\"}} onClick={handleOffVolume}><FiVolume2/></button>\n                        <button className=\"action-btn-play btn-volume\" style={{display:volume==0 ? \"flex\" : \"none\"}} onClick={handleOnVolume}><FiVolumeX/></button>\n                        <div className=\"time-slider-bar\">\n                            <TimeSlider\n                                xstep={0.01}\n                                axis=\"x\"\n                                xmax={1}\n                                x={volume}\n                                xmin={0}\n                                onChange={handleTimeSliderVolume}\n                                styles={{\n                                    track: {\n                                        backgroundColor: \"#ffffff\",\n                                        height: \"3px\",\n                                    },\n                                    active: {\n                                        backgroundColor: \"#333\",\n                                        height: \"2px\",\n                                    },\n                                    thumb: {\n                                        marginTop: \"-3px\",\n                                        width: \"8px\",\n                                        height: \"8px\",\n                                        backgroundColor: \"#333\",\n                                        borderRadius: 0,\n                                    },\n                                }}\n                            />\n                        </div>       \n                    </div>\n                    <div className=\"divide\">\n                        \n                    </div>\n                    <div className=\"list-music\" onClick={handleShowDrawerQueue}>\n                        <button className=\"action-btn-play btn-list-music\"><BsMusicNoteList/></button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Player\n","/Users/dom/Documents/music-mern/client/src/containers/Home/Home.js",["186","187"],"import React, { useEffect,useState } from 'react';\nimport './Home.css';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchPlaylist, fetchGallery } from '../../actions/playlist_action';\n\nimport Gallery from '../../components/Gallery/Gallery';\nimport Playlist from '../../components/Playlist/Playlist';\nimport PlaylistChart from '../../components/PlaylistChart/PlaylistChart';\nimport PlaylistLoading from '../../components/PlaylistLoading/PlaylistLoading';\nimport ContainerLoading from '../../components/ContainerLoading/ContainerLoading';\n\nfunction Home() {\n    const dispatch = useDispatch();\n    const listPlaylist = useSelector(state => state.playlist.listPlaylist);\n    const listGallery  = useSelector(state => state.playlist.listGallery);\n    const showLoading = useSelector(state => state.ui.showLoading);\n\n\n\n    useEffect(() => {\n        dispatch(fetchGallery());\n        dispatch(fetchPlaylist());\n    },[dispatch])\n\n    let arr = [1,2,3,4,5,6,7]\n    return (\n        <div className=\"main-container\">\n            {   showLoading ? <ContainerLoading/> : \n                    listGallery && listGallery.length && listGallery.map((list,index) => {\n                        if(list.sectionType === \"banner\"){\n                            return (\n                                <Gallery gallery={list.items} key={index}/>\n                            )\n                        }\n                        else if(list.sectionType === \"playlist\"){\n                            return ( \n                                 <Playlist title={list.title} data={list.items} key={index}/>\n                            )\n                        }\n                    })\n            }\n            { showLoading ? arr.map(item => <PlaylistLoading key={item}/>)  :\n                    listPlaylist && listPlaylist.length && listPlaylist.map((list,index) => {\n                        if(list.sectionType === \"playlist\" || list.sectionType === \"genre_mood\"){\n                            return (\n                                <Playlist title={list.title} data={list.items}  key={index}/>\n                            )\n                        }\n                        else if(list.sectionType === \"RTChart\"){\n                            return (\n                                <PlaylistChart  key={index} chart={list.chart} items={list.items}/>\n                            )\n                        }\n                        else return null;\n                    })\n            }\n        </div>\n    )\n}\n\nexport default Home\n","/Users/dom/Documents/music-mern/client/src/containers/SideBar/SideBar.js",[],"/Users/dom/Documents/music-mern/client/src/containers/NavBar/NavBar.js",[],"/Users/dom/Documents/music-mern/client/src/commons/Routers/PublicRouter.js",[],"/Users/dom/Documents/music-mern/client/src/components/Playlist/Playlist.js",[],"/Users/dom/Documents/music-mern/client/src/components/PlaylistChart/PlaylistChart.js",[],"/Users/dom/Documents/music-mern/client/src/components/ChartListItem/ChartListItem.js",[],"/Users/dom/Documents/music-mern/client/src/components/Chart/Chart.js",[],"/Users/dom/Documents/music-mern/client/src/commons/util.js",["188"],"\n\nexport const resizeImg = (url,width,ratio) => {\n    let arr = url.split('/')\n    arr[3] = `w${width}_r${ratio}_jpeg`\n    return arr.join('/');\n}\n\nexport function truncate(str,length){\n    return str.length>length+1 ? str.substr(0,length) + '...' : str;\n}\n\nexport function getPercent(obj){\n    let arr1 = [],arr2 = [],arr3 = [],result = [];\n\n    let arr = Object.values(obj).map(i => i.map(j => j.counter));\n\n    let arrIdx = arr.map(i => i.indexOf(Math.max(...i))) //get Idx values max of each array \n\n    arr.map(i => {\n        arr1.push(i[arrIdx[0]]);\n        arr2.push(i[arrIdx[1]]);\n        arr3.push(i[arrIdx[2]]); \n        return i;\n    })  //get values \n\n    result.push(arr1,arr2,arr3);\n\n    return result.map((i,index) => {\n       return Math.floor((i[index]/i.reduce((a,b)=> a+b,0))*100 + 0.5)\n    }) //convert to percent\n}\n\nexport function formatTimeAudio(time){\n    let fTime = Math.trunc(time);\n\n    let minutes = \"0\" + Math.floor(fTime / 60);\n    let seconds = \"0\" + (fTime - minutes * 60);\n    let cur = minutes.substr(-2) + \":\" + seconds.substr(-2);\n\n    return cur;\n}\n\nexport function removeDuplicatesFromArrayObj(arr1,arr2){\n    return arr1.filter(i => arr2.findIndex(j => j.encodeId === i.encodeId) === -1) \n}\n\nexport function arrayRemove(arr,value) {\n    return arr.filter(function(ele){ \n        return ele != value; \n    });\n}","/Users/dom/Documents/music-mern/client/src/constants/playlist_constants.js",[],"/Users/dom/Documents/music-mern/client/src/actions/playlist_action.js",[],"/Users/dom/Documents/music-mern/client/src/reducers/index.js",[],"/Users/dom/Documents/music-mern/client/src/reducers/playlist_reducers.js",[],"/Users/dom/Documents/music-mern/client/src/helpers/toastHelper.js",[],"/Users/dom/Documents/music-mern/client/src/redux/configureStore.js",[],"/Users/dom/Documents/music-mern/client/src/sagas/index.js",["189","190","191","192","193","194"],"import {\n    call,\n    delay,\n    put,\n    select,\n    takeEvery,\n    takeLatest,\n    take,\n    all\n} from 'redux-saga/effects';\nimport * as songTypes from '../constants/song_constant';\nimport * as playlistTypes from '../constants/playlist_constants';\nimport { STATUS_CODE } from '../constants/index';\n\nimport {\n    fetchPlaylistSuccess,\n    fetchPlaylistFailed,\n    fetchGallerySuccess,\n    fetchGalleryFailed,\n} from '../actions/playlist_action';\nimport { \n    showLoading,\n    hideLoading,\n} from '../actions/ui_action';\nimport { playSongAction,pauseSongAction,fetchPlaylistSongSuccess, fetchPlaylistSongFailed, fetchSong, fetchSongSuccess, fetchSongFailed, fetchSongSuggestedSuccess } from '../actions/song_action';\n\nimport { getPlaylist,getGallery } from '../apis/playlist_api';\nimport { getSongPlaylist,getSong, getSongSuggested } from '../apis/song_api';\nimport { addPlaylistToQueue, addSongToQueue } from '../actions/queue_action';\n\n\n\n\n\n\nfunction* fetchPlaylistSaga() {    \n    yield put(showLoading());\n    \n    const resp = yield call(getPlaylist);\n\n    const { status, data } = resp;\n    if (status === STATUS_CODE.SUCCESS) {\n        yield put(fetchPlaylistSuccess(data));\n    } else {\n        yield put(fetchPlaylistFailed(data));\n    }\n    yield delay(500);\n\n    yield put(hideLoading());\n\n}\n\nfunction* fetchGallerySaga() {\n    yield put(showLoading());\n\n    const resp = yield call(getGallery);\n\n    const { status, data } = resp;\n    if (status === STATUS_CODE.SUCCESS) {\n        yield put(fetchGallerySuccess(data));\n    } else {\n        yield put(fetchGalleryFailed(data));\n    }\n\n    yield delay(500);\n    yield put(hideLoading());\n}\n\nfunction* fetchSongSaga(payload) {\n    const {songInfo}  = payload;\n\n    const resp = yield call(getSong,songInfo.encodeId)\n    const { status, data } = resp;\n\n    if (status === STATUS_CODE.SUCCESS) {\n        yield put(fetchSongSuccess(data));       \n        localStorage.setItem('imusic_hasPlayer',true)\n        localStorage.setItem('imusic_urlSong',JSON.stringify(data))\n    } else {\n        yield put(fetchSongFailed(data));\n    }\n}\n\nfunction* fetchSuggestedSongSaga(payload) {\n    const {encodeId}  = payload;\n\n    const resp = yield call(getSongSuggested,encodeId)\n    const { status, data } = resp;\n    console.log(data)\n    if (status === STATUS_CODE.SUCCESS) {\n        let queue = JSON.parse(localStorage.getItem('imusic_queue'))\n\n        localStorage.setItem('imusic_queue',JSON.stringify({...queue,recommend: data}))\n        yield  put(addSongToQueue(data,encodeId))    \n        yield put(fetchSongSuggestedSuccess(data));   \n    } else {\n        yield put(fetchSong(data));\n    }\n\n}\n\nfunction* fetchSongPlaylistSaga(payload) { \n    const {encodeId}  = payload;\n\n    const resp = yield call(getSongPlaylist,encodeId)\n    \n    const { status, data } = resp;\n    if (status === STATUS_CODE.SUCCESS) {\n        const {items} = data;\n        //fetch first song streaming of playlist and add to queue\n        yield put(fetchPlaylistSongSuccess(data))\n        yield put(fetchSong(items[0]))\n        yield  put(addPlaylistToQueue(data,encodeId))\n        // save data song to queue local storage\n        let queue = JSON.parse(localStorage.getItem('imusic_queue'))\n\n        localStorage.setItem('imusic_queue',JSON.stringify({...queue,\n            currentEncodeId: items[0].encodeId,\n            encodeIds: items.map(i=>i.encodeId),\n            itemsMap: items,\n            playlistEncodeId: encodeId,\n            preSong: []\n        }));\n    } else {\n        yield put(fetchPlaylistSongFailed(data));\n    }\n\n}\n\nfunction* rootSaga() {\n    yield takeLatest(playlistTypes.FETCH_GALLERY, fetchGallerySaga);\n    yield takeLatest(playlistTypes.FETCH_PLAYLIST, fetchPlaylistSaga);\n    yield takeLatest(songTypes.FETCH_PLAYLIST_SONG, fetchSongPlaylistSaga);\n    yield takeLatest(songTypes.FETCH_SONG,fetchSongSaga)\n    yield takeLatest(songTypes.FETCH_SUGGESTED_SONG, fetchSuggestedSongSaga);\n\n}\n\nexport default rootSaga;","/Users/dom/Documents/music-mern/client/src/constants/index.js",[],"/Users/dom/Documents/music-mern/client/src/apis/playlist_api.js",[],"/Users/dom/Documents/music-mern/client/src/constants/endpoint_constant.js",[],"/Users/dom/Documents/music-mern/client/src/commons/axiosService.js",[],"/Users/dom/Documents/music-mern/client/src/components/SidebarLoading/SidebarLoading.js",[],"/Users/dom/Documents/music-mern/client/src/components/ContainerLoading/ContainerLoading.js",[],"/Users/dom/Documents/music-mern/client/src/components/PlaylistLoading/PlaylistLoading.js",[],"/Users/dom/Documents/music-mern/client/src/reducers/ui_reducer.js",[],"/Users/dom/Documents/music-mern/client/src/constants/ui_constant.js",[],"/Users/dom/Documents/music-mern/client/src/actions/ui_action.js",[],"/Users/dom/Documents/music-mern/client/src/reducers/song_reducer.js",[],"/Users/dom/Documents/music-mern/client/src/constants/song_constant.js",[],"/Users/dom/Documents/music-mern/client/src/actions/song_action.js",[],"/Users/dom/Documents/music-mern/client/src/reducers/queue_reducer.js",["195"],"import * as queueTypes from '../constants/queue_constant';\nimport { removeSongFromQueue } from '../actions/queue_action';\n\n\nconst initialState = {\n  queues: [],\n  ids: [],\n  idPlaylist: null\n};\n\n  \nconst reducer = (state = initialState, action) => {\n\n    switch (action.type) {\n      case queueTypes.ADD_SONG_TO_QUEUE: {\n        return addSongToQueue(state, action);\n      }\n      case queueTypes.ADD_PLAYLIST_TO_QUEUE: {\n        return addPlaylistToQueue(state,action);\n      }\n      case queueTypes.REMOVE_SONG_FROM_QUEUE: {\n        // return removeSongFromQueue(state,action);\n        return {...state,queues: state.queues.filter(i => i.encodeId !== action.encodeId)}\n      }\n      default:\n        return state;\n    }\n  };\n  \n  \n\n  const addSongToQueue = (state, action) => {\n      return {...state,queues: state.queues.concat(action.data.items),ids: action.encodeId }\n    \n  }\n\n  const addPlaylistToQueue = (state,action) => {\n    if(state.idPlaylist !== action.encodeId){\n      return {...state,queues: state.queues.concat(action.data.items),idPlaylist: action.encodeId }\n    }\n    return state;\n  }\n\n  // const removeSongFromQueue = (state,action) => {\n  //   return {...state,queues: state.queues.filter(i => i.encodeId !== action.encodeId)}\n  //   const con = state.ids.find(id => id === action.encodeId);\n  //   if (typeof con === 'undefined') {\n  //     return {...state,queues: state.queues.concat(action.data.items),ids: action.encodeId }\n  //   }\n  //   return state;\n  // }\n  export default reducer;\n","/Users/dom/Documents/music-mern/client/src/apis/song_api.js",["196"],"/Users/dom/Documents/music-mern/client/src/containers/DrawerQueue/DrawerQueue.js",["197","198","199","200","201","202","203"],"/Users/dom/Documents/music-mern/client/src/components/ListSongQueue.js",["204"],"import React from 'react'\nimport iconPlaying from '../assets/Images/icon-playing.gif'\nimport { BsFillPlayFill } from 'react-icons/bs';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\nfunction ListSongQueue(props) {\n    const {thumbnail, title, artistsNames, alias} = props\n    return (\n        <div className=\"list song-data queue\">\n            <div className=\"song-left\">\n                <LazyLoadImage\n                    effect=\"blur\"\n                    alt={alias}\n                    height={40}\n                    src={thumbnail} \n                    width={40} \n                />\n                <div className=\"opacity\"/>\n                <div className=\"action-container\">\n                    <button \n                        className=\"action-btn-play\"  \n                    >\n                        <BsFillPlayFill/>                                                \n                    </button>\n                    <button \n                        style={{display:\"none\"}}\n                        className=\"action-btn-play\"  \n                    >\n                        {/* <img src={iconPlaying}/> */}\n                    </button>\n                </div>\n            </div>\n            <div className=\"song-info\">\n                <span className=\"song-title\">{title}</span>\n                <span className=\"song-artists\">{artistsNames}</span>\n            </div>\n      </div>\n    )\n}\n\nexport default ListSongQueue\n","/Users/dom/Documents/music-mern/client/src/constants/queue_constant.js",[],"/Users/dom/Documents/music-mern/client/src/actions/queue_action.js",[],"/Users/dom/Documents/music-mern/client/src/components/PlaylistItem/PlaylistItem.js",["205","206","207"],"import React, { useState, useRef } from 'react'\nimport iconPlaying from '../../assets/Images/icon-playing.gif'\nimport { BsFillPlayFill } from 'react-icons/bs';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchPlaylistSong, pauseSongAction } from '../../actions/song_action';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\nfunction PlaylistItem(props) {\n    const { thumbnail, alias, title, encodeId} = props\n\n    const dispatch = useDispatch();\n    const refBtnPlaying = useRef([]);\n    const refBtnPlay = useRef([]);\n    const refOpacityBg = useRef([]);\n    const currentEncodePlaylist = localStorage.getItem('imusic_queue').playlistEncodeId\n\n    const handlePlaySong = (id) => {\n        if(currentEncodePlaylist === id){\n            \n        }\n        \n        dispatch(fetchPlaylistSong(id,1))\n            refBtnPlaying.current[id].style.display = \"flex\";\n            refBtnPlaying.current[id].style.opacity = \"1\";\n            refBtnPlay.current[id].style.display = \"none\";\n            refOpacityBg.current[id].style.opacity = \"1\";\n        \n\n    } \n    \n    const handleStopSong = (id) => {\n        dispatch(pauseSongAction())\n\n        refBtnPlaying.current[id].style.opacity = \"0\";\n        refBtnPlay.current[id].style.display = \"flex\";\n        refBtnPlaying.current[id].style.display = \"none\";\n        refOpacityBg.current[id].style.opacity = \"0\";\n\n    }\n    return (\n        <div className=\"carousel-item\">\n            <div className=\"carousel-card\">\n                <div className=\"card-wrapper\">\n                    <div className=\"card-container\">\n                        <LazyLoadImage\n                            effect=\"blur\"\n                            alt={alias}\n                            height={'100%'}\n                            src={thumbnail} \n                            width={'100%'}\n                            className=\"card-img\" \n                        />\n                        <div className=\"opacity\" ref={el => (refOpacityBg.current[encodeId] = el)}/>\n                        <div className=\"action-container\">\n                            <button \n                                className=\"action-btn-play\"  \n                                ref={el => (refBtnPlay.current[encodeId] = el)}\n                                onClick={()=>handlePlaySong(encodeId)}\n                            >\n                                <BsFillPlayFill/>                                                \n                            </button>\n                            <button \n                                style={{display:\"none\"}}\n                                className=\"action-btn-play\"  \n                                ref={el => (refBtnPlaying.current[encodeId] = el)}\n                                onClick={()=>handleStopSong(encodeId)}\n                            >\n                                <img src={iconPlaying}/>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"card-content\">\n                    <h4 className=\"card-title\">{title}</h4>\n                </div>         \n            </div>\n        </div>   \n    )\n}\n\nexport default PlaylistItem\n",{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","severity":1,"message":"213","line":3,"column":9,"nodeType":"214","messageId":"215","endLine":3,"endColumn":15},{"ruleId":"212","severity":1,"message":"216","line":1,"column":17,"nodeType":"214","messageId":"215","endLine":1,"endColumn":25},{"ruleId":"212","severity":1,"message":"217","line":1,"column":26,"nodeType":"214","messageId":"215","endLine":1,"endColumn":35},{"ruleId":"212","severity":1,"message":"218","line":5,"column":10,"nodeType":"214","messageId":"215","endLine":5,"endColumn":21},{"ruleId":"212","severity":1,"message":"219","line":5,"column":23,"nodeType":"214","messageId":"215","endLine":5,"endColumn":34},{"ruleId":"212","severity":1,"message":"220","line":6,"column":28,"nodeType":"214","messageId":"215","endLine":6,"endColumn":39},{"ruleId":"212","severity":1,"message":"221","line":10,"column":30,"nodeType":"214","messageId":"215","endLine":10,"endColumn":45},{"ruleId":"222","severity":1,"message":"223","line":253,"column":94,"nodeType":"224","messageId":"225","endLine":253,"endColumn":96},{"ruleId":"212","severity":1,"message":"216","line":1,"column":27,"nodeType":"214","messageId":"215","endLine":1,"endColumn":35},{"ruleId":"226","severity":1,"message":"227","line":30,"column":87,"nodeType":"228","messageId":"229","endLine":30,"endColumn":89},{"ruleId":"222","severity":1,"message":"230","line":50,"column":20,"nodeType":"224","messageId":"225","endLine":50,"endColumn":22},{"ruleId":"212","severity":1,"message":"231","line":5,"column":5,"nodeType":"214","messageId":"215","endLine":5,"endColumn":11},{"ruleId":"212","severity":1,"message":"232","line":6,"column":5,"nodeType":"214","messageId":"215","endLine":6,"endColumn":14},{"ruleId":"212","severity":1,"message":"233","line":8,"column":5,"nodeType":"214","messageId":"215","endLine":8,"endColumn":9},{"ruleId":"212","severity":1,"message":"234","line":9,"column":5,"nodeType":"214","messageId":"215","endLine":9,"endColumn":8},{"ruleId":"212","severity":1,"message":"235","line":25,"column":10,"nodeType":"214","messageId":"215","endLine":25,"endColumn":24},{"ruleId":"212","severity":1,"message":"221","line":25,"column":25,"nodeType":"214","messageId":"215","endLine":25,"endColumn":40},{"ruleId":"212","severity":1,"message":"236","line":2,"column":10,"nodeType":"214","messageId":"215","endLine":2,"endColumn":29},{"ruleId":"212","severity":1,"message":"237","line":2,"column":10,"nodeType":"214","messageId":"215","endLine":2,"endColumn":18},{"ruleId":"212","severity":1,"message":"217","line":1,"column":27,"nodeType":"214","messageId":"215","endLine":1,"endColumn":36},{"ruleId":"212","severity":1,"message":"238","line":15,"column":11,"nodeType":"214","messageId":"215","endLine":15,"endColumn":20},{"ruleId":"212","severity":1,"message":"239","line":16,"column":9,"nodeType":"214","messageId":"215","endLine":16,"endColumn":14},{"ruleId":"212","severity":1,"message":"240","line":24,"column":12,"nodeType":"214","messageId":"215","endLine":24,"endColumn":19},{"ruleId":"212","severity":1,"message":"241","line":24,"column":21,"nodeType":"214","messageId":"215","endLine":24,"endColumn":31},{"ruleId":"212","severity":1,"message":"242","line":25,"column":12,"nodeType":"214","messageId":"215","endLine":25,"endColumn":19},{"ruleId":"212","severity":1,"message":"243","line":25,"column":21,"nodeType":"214","messageId":"215","endLine":25,"endColumn":31},{"ruleId":"212","severity":1,"message":"244","line":2,"column":8,"nodeType":"214","messageId":"215","endLine":2,"endColumn":19},{"ruleId":"212","severity":1,"message":"216","line":1,"column":17,"nodeType":"214","messageId":"215","endLine":1,"endColumn":25},{"ruleId":"212","severity":1,"message":"219","line":4,"column":23,"nodeType":"214","messageId":"215","endLine":4,"endColumn":34},{"ruleId":"245","severity":1,"message":"246","line":68,"column":33,"nodeType":"247","endLine":68,"endColumn":57},"no-native-reassign",["248"],"no-negated-in-lhs",["249"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'arrayRemove' is defined but never used.","'pauseSongAction' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Expected '!==' and instead saw '!='.","'select' is defined but never used.","'takeEvery' is defined but never used.","'take' is defined but never used.","'all' is defined but never used.","'playSongAction' is defined but never used.","'removeSongFromQueue' is defined but never used.","'ROOT_URL' is defined but never used.","'recommend' is assigned a value but never used.","'queue' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'hasMore' is assigned a value but never used.","'setHasMore' is assigned a value but never used.","'iconPlaying' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]